{"version":3,"file":"aws-sig.cjs.js","sources":["../src/crypto-es/core.js","../src/crypto-es/hmac.js","../src/crypto-es/sha256.js","../src/encode.js","../src/request/query.js","../src/request/headers.js","../src/request/path.js","../src/request/request.js","../src/stringtosign.js","../src/signature.js","../src/index.js"],"sourcesContent":["/**\n * CryptoJS core components.\n */\n/*\n\t* Local polyfil of Object.create\n\t*/\nvar create = Object.create || (function () {\n\tfunction F() {};\n\n\treturn function (obj) {\n\t\tvar subtype;\n\n\t\tF.prototype = obj;\n\n\t\tsubtype = new F();\n\n\t\tF.prototype = null;\n\n\t\treturn subtype;\n\t};\n}())\n\n/**\n * CryptoJS namespace.\n */\nvar C = {};\n\n/**\n * Library namespace.\n */\nvar C_lib = C.lib = {};\n\n/**\n * Base object for prototypal inheritance.\n */\nvar Base = C_lib.Base = (function () {\n\n\n\treturn {\n\t\t/**\n\t\t * Creates a new object that inherits from this object.\n\t\t *\n\t\t * @param {Object} overrides Properties to copy into the new object.\n\t\t *\n\t\t * @return {Object} The new object.\n\t\t *\n\t\t * @static\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     var MyType = CryptoJS.lib.Base.extend({\n\t\t *         field: 'value',\n\t\t *\n\t\t *         method: function () {\n\t\t *         }\n\t\t *     });\n\t\t */\n\t\textend: function (overrides) {\n\t\t\t// Spawn\n\t\t\tvar subtype = create(this);\n\n\t\t\t// Augment\n\t\t\tif (overrides) {\n\t\t\t\tsubtype.mixIn(overrides);\n\t\t\t}\n\n\t\t\t// Create default initializer\n\t\t\tif (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t\t\t\tsubtype.init = function () {\n\t\t\t\t\tsubtype.$super.init.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Initializer's prototype is the subtype object\n\t\t\tsubtype.init.prototype = subtype;\n\n\t\t\t// Reference supertype\n\t\t\tsubtype.$super = this;\n\n\t\t\treturn subtype;\n\t\t},\n\n\t\t/**\n\t\t * Extends this object and runs the init method.\n\t\t * Arguments to create() will be passed to init().\n\t\t *\n\t\t * @return {Object} The new object.\n\t\t *\n\t\t * @static\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     var instance = MyType.create();\n\t\t */\n\t\tcreate: function () {\n\t\t\tvar instance = this.extend();\n\t\t\tinstance.init.apply(instance, arguments);\n\n\t\t\treturn instance;\n\t\t},\n\n\t\t/**\n\t\t * Initializes a newly created object.\n\t\t * Override this method to add some logic when your objects are created.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     var MyType = CryptoJS.lib.Base.extend({\n\t\t *         init: function () {\n\t\t *             // ...\n\t\t *         }\n\t\t *     });\n\t\t */\n\t\tinit: function () {\n\t\t},\n\n\t\t/**\n\t\t * Copies properties into this object.\n\t\t *\n\t\t * @param {Object} properties The properties to mix in.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     MyType.mixIn({\n\t\t *         field: 'value'\n\t\t *     });\n\t\t */\n\t\tmixIn: function (properties) {\n\t\t\tfor (var propertyName in properties) {\n\t\t\t\tif (properties.hasOwnProperty(propertyName)) {\n\t\t\t\t\tthis[propertyName] = properties[propertyName];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// IE won't copy toString using the loop above\n\t\t\tif (properties.hasOwnProperty('toString')) {\n\t\t\t\tthis.toString = properties.toString;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Creates a copy of this object.\n\t\t *\n\t\t * @return {Object} The clone.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     var clone = instance.clone();\n\t\t */\n\t\tclone: function () {\n\t\t\treturn this.init.prototype.extend(this);\n\t\t}\n\t};\n}());\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nvar WordArray = C_lib.WordArray = Base.extend({\n\t/**\n\t * Initializes a newly created word array.\n\t *\n\t * @param {Array} words (Optional) An array of 32-bit words.\n\t * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t *\n\t * @example\n\t *\n\t *     var wordArray = CryptoJS.lib.WordArray.create();\n\t *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t */\n\tinit: function (words, sigBytes) {\n\t\twords = this.words = words || [];\n\n\t\tif (sigBytes != undefined) {\n\t\t\tthis.sigBytes = sigBytes;\n\t\t} else {\n\t\t\tthis.sigBytes = words.length * 4;\n\t\t}\n\t},\n\n\t/**\n\t * Converts this word array to a string.\n\t *\n\t * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t *\n\t * @return {string} The stringified word array.\n\t *\n\t * @example\n\t *\n\t *     var string = wordArray + '';\n\t *     var string = wordArray.toString();\n\t *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t */\n\ttoString: function (encoder) {\n\t\treturn (encoder || Hex).stringify(this);\n\t},\n\n\t/**\n\t * Concatenates a word array to this word array.\n\t *\n\t * @param {WordArray} wordArray The word array to append.\n\t *\n\t * @return {WordArray} This word array.\n\t *\n\t * @example\n\t *\n\t *     wordArray1.concat(wordArray2);\n\t */\n\tconcat: function (wordArray) {\n\t\t// Shortcuts\n\t\tvar thisWords = this.words;\n\t\tvar thatWords = wordArray.words;\n\t\tvar thisSigBytes = this.sigBytes;\n\t\tvar thatSigBytes = wordArray.sigBytes;\n\n\t\t// Clamp excess bits\n\t\tthis.clamp();\n\n\t\t// Concat\n\t\tif (thisSigBytes % 4) {\n\t\t\t// Copy one byte at a time\n\t\t\tfor (var i = 0; i < thatSigBytes; i++) {\n\t\t\t\tvar thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t\t\tthisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t\t\t}\n\t\t} else {\n\t\t\t// Copy one word at a time\n\t\t\tfor (var i = 0; i < thatSigBytes; i += 4) {\n\t\t\t\tthisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t\t\t}\n\t\t}\n\t\tthis.sigBytes += thatSigBytes;\n\n\t\t// Chainable\n\t\treturn this;\n\t},\n\n\t/**\n\t * Removes insignificant bits.\n\t *\n\t * @example\n\t *\n\t *     wordArray.clamp();\n\t */\n\tclamp: function () {\n\t\t// Shortcuts\n\t\tvar words = this.words;\n\t\tvar sigBytes = this.sigBytes;\n\n\t\t// Clamp\n\t\twords[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t\twords.length = Math.ceil(sigBytes / 4);\n\t},\n\n\t/**\n\t * Creates a copy of this word array.\n\t *\n\t * @return {WordArray} The clone.\n\t *\n\t * @example\n\t *\n\t *     var clone = wordArray.clone();\n\t */\n\tclone: function () {\n\t\tvar clone = Base.clone.call(this);\n\t\tclone.words = this.words.slice(0);\n\n\t\treturn clone;\n\t},\n\n\t/**\n\t * Creates a word array filled with random bytes.\n\t *\n\t * @param {number} nBytes The number of random bytes to generate.\n\t *\n\t * @return {WordArray} The random word array.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t */\n\trandom: function (nBytes) {\n\t\tvar words = [];\n\n\t\tvar r = (function (m_w) {\n\t\t\tvar m_w = m_w;\n\t\t\tvar m_z = 0x3ade68b1;\n\t\t\tvar mask = 0xffffffff;\n\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tvar result = ((m_z << 0x10) + m_w) & mask;\n\t\t\t\tresult /= 0x100000000;\n\t\t\t\tresult += 0.5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t}\n\t\t});\n\n\t\tfor (var i = 0, rcache; i < nBytes; i += 4) {\n\t\t\tvar _r = r((rcache || Math.random()) * 0x100000000);\n\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords.push((_r() * 0x100000000) | 0);\n\t\t}\n\n\t\treturn new WordArray.init(words, nBytes);\n\t}\n});\n\n/**\n * Encoder namespace.\n */\nvar C_enc = C.enc = {};\n\n/**\n * Hex encoding strategy.\n */\nvar Hex = C_enc.Hex = {\n\t/**\n\t * Converts a word array to a hex string.\n\t *\n\t * @param {WordArray} wordArray The word array.\n\t *\n\t * @return {string} The hex string.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t */\n\tstringify: function (wordArray) {\n\t\t// Shortcuts\n\t\tvar words = wordArray.words;\n\t\tvar sigBytes = wordArray.sigBytes;\n\n\t\t// Convert\n\t\tvar hexChars = [];\n\t\tfor (var i = 0; i < sigBytes; i++) {\n\t\t\tvar bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t\thexChars.push((bite >>> 4).toString(16));\n\t\t\thexChars.push((bite & 0x0f).toString(16));\n\t\t}\n\n\t\treturn hexChars.join('');\n\t},\n\n\t/**\n\t * Converts a hex string to a word array.\n\t *\n\t * @param {string} hexStr The hex string.\n\t *\n\t * @return {WordArray} The word array.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t */\n\tparse: function (hexStr) {\n\t\t// Shortcut\n\t\tvar hexStrLength = hexStr.length;\n\n\t\t// Convert\n\t\tvar words = [];\n\t\tfor (var i = 0; i < hexStrLength; i += 2) {\n\t\t\twords[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t\t}\n\n\t\treturn new WordArray.init(words, hexStrLength / 2);\n\t}\n};\n\n/**\n * Latin1 encoding strategy.\n */\nvar Latin1 = C_enc.Latin1 = {\n\t/**\n\t * Converts a word array to a Latin1 string.\n\t *\n\t * @param {WordArray} wordArray The word array.\n\t *\n\t * @return {string} The Latin1 string.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t */\n\tstringify: function (wordArray) {\n\t\t// Shortcuts\n\t\tvar words = wordArray.words;\n\t\tvar sigBytes = wordArray.sigBytes;\n\n\t\t// Convert\n\t\tvar latin1Chars = [];\n\t\tfor (var i = 0; i < sigBytes; i++) {\n\t\t\tvar bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t\tlatin1Chars.push(String.fromCharCode(bite));\n\t\t}\n\n\t\treturn latin1Chars.join('');\n\t},\n\n\t/**\n\t * Converts a Latin1 string to a word array.\n\t *\n\t * @param {string} latin1Str The Latin1 string.\n\t *\n\t * @return {WordArray} The word array.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t */\n\tparse: function (latin1Str) {\n\t\t// Shortcut\n\t\tvar latin1StrLength = latin1Str.length;\n\n\t\t// Convert\n\t\tvar words = [];\n\t\tfor (var i = 0; i < latin1StrLength; i++) {\n\t\t\twords[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t\t}\n\n\t\treturn new WordArray.init(words, latin1StrLength);\n\t}\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nvar Utf8 = C_enc.Utf8 = {\n\t/**\n\t * Converts a word array to a UTF-8 string.\n\t *\n\t * @param {WordArray} wordArray The word array.\n\t *\n\t * @return {string} The UTF-8 string.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t */\n\tstringify: function (wordArray) {\n\t\ttry {\n\t\t\treturn decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t\t} catch (e) {\n\t\t\tthrow new Error('Malformed UTF-8 data');\n\t\t}\n\t},\n\n\t/**\n\t * Converts a UTF-8 string to a word array.\n\t *\n\t * @param {string} utf8Str The UTF-8 string.\n\t *\n\t * @return {WordArray} The word array.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t */\n\tparse: function (utf8Str) {\n\t\treturn Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t}\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nvar BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t/**\n\t * Resets this block algorithm's data buffer to its initial state.\n\t *\n\t * @example\n\t *\n\t *     bufferedBlockAlgorithm.reset();\n\t */\n\treset: function () {\n\t\t// Initial values\n\t\tthis._data = new WordArray.init();\n\t\tthis._nDataBytes = 0;\n\t},\n\n\t/**\n\t * Adds new data to this block algorithm's buffer.\n\t *\n\t * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t *\n\t * @example\n\t *\n\t *     bufferedBlockAlgorithm._append('data');\n\t *     bufferedBlockAlgorithm._append(wordArray);\n\t */\n\t_append: function (data) {\n\t\t// Convert string to WordArray, else assume WordArray already\n\t\tif (typeof data == 'string') {\n\t\t\tdata = Utf8.parse(data);\n\t\t}\n\n\t\t// Append\n\t\tthis._data.concat(data);\n\t\tthis._nDataBytes += data.sigBytes;\n\t},\n\n\t/**\n\t * Processes available data blocks.\n\t *\n\t * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t *\n\t * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t *\n\t * @return {WordArray} The processed data.\n\t *\n\t * @example\n\t *\n\t *     var processedData = bufferedBlockAlgorithm._process();\n\t *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t */\n\t_process: function (doFlush) {\n\t\t// Shortcuts\n\t\tvar data = this._data;\n\t\tvar dataWords = data.words;\n\t\tvar dataSigBytes = data.sigBytes;\n\t\tvar blockSize = this.blockSize;\n\t\tvar blockSizeBytes = blockSize * 4;\n\n\t\t// Count blocks ready\n\t\tvar nBlocksReady = dataSigBytes / blockSizeBytes;\n\t\tif (doFlush) {\n\t\t\t// Round up to include partial blocks\n\t\t\tnBlocksReady = Math.ceil(nBlocksReady);\n\t\t} else {\n\t\t\t// Round down to include only full blocks,\n\t\t\t// less the number of blocks that must remain in the buffer\n\t\t\tnBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t\t}\n\n\t\t// Count words ready\n\t\tvar nWordsReady = nBlocksReady * blockSize;\n\n\t\t// Count bytes ready\n\t\tvar nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t\t// Process blocks\n\t\tif (nWordsReady) {\n\t\t\tfor (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t\t\t\t// Perform concrete-algorithm logic\n\t\t\t\tthis._doProcessBlock(dataWords, offset);\n\t\t\t}\n\n\t\t\t// Remove processed words\n\t\t\tvar processedWords = dataWords.splice(0, nWordsReady);\n\t\t\tdata.sigBytes -= nBytesReady;\n\t\t}\n\n\t\t// Return processed words\n\t\treturn new WordArray.init(processedWords, nBytesReady);\n\t},\n\n\t/**\n\t * Creates a copy of this object.\n\t *\n\t * @return {Object} The clone.\n\t *\n\t * @example\n\t *\n\t *     var clone = bufferedBlockAlgorithm.clone();\n\t */\n\tclone: function () {\n\t\tvar clone = Base.clone.call(this);\n\t\tclone._data = this._data.clone();\n\n\t\treturn clone;\n\t},\n\n\t_minBufferSize: 0\n});\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nvar Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t/**\n\t * Configuration options.\n\t */\n\tcfg: Base.extend(),\n\n\t/**\n\t * Initializes a newly created hasher.\n\t *\n\t * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t *\n\t * @example\n\t *\n\t *     var hasher = CryptoJS.algo.SHA256.create();\n\t */\n\tinit: function (cfg) {\n\t\t// Apply config defaults\n\t\tthis.cfg = this.cfg.extend(cfg);\n\n\t\t// Set initial values\n\t\tthis.reset();\n\t},\n\n\t/**\n\t * Resets this hasher to its initial state.\n\t *\n\t * @example\n\t *\n\t *     hasher.reset();\n\t */\n\treset: function () {\n\t\t// Reset data buffer\n\t\tBufferedBlockAlgorithm.reset.call(this);\n\n\t\t// Perform concrete-hasher logic\n\t\tthis._doReset();\n\t},\n\n\t/**\n\t * Updates this hasher with a message.\n\t *\n\t * @param {WordArray|string} messageUpdate The message to append.\n\t *\n\t * @return {Hasher} This hasher.\n\t *\n\t * @example\n\t *\n\t *     hasher.update('message');\n\t *     hasher.update(wordArray);\n\t */\n\tupdate: function (messageUpdate) {\n\t\t// Append\n\t\tthis._append(messageUpdate);\n\n\t\t// Update the hash\n\t\tthis._process();\n\n\t\t// Chainable\n\t\treturn this;\n\t},\n\n\t/**\n\t * Finalizes the hash computation.\n\t * Note that the finalize operation is effectively a destructive, read-once operation.\n\t *\n\t * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t *\n\t * @return {WordArray} The hash.\n\t *\n\t * @example\n\t *\n\t *     var hash = hasher.finalize();\n\t *     var hash = hasher.finalize('message');\n\t *     var hash = hasher.finalize(wordArray);\n\t */\n\tfinalize: function (messageUpdate) {\n\t\t// Final message update\n\t\tif (messageUpdate) {\n\t\t\tthis._append(messageUpdate);\n\t\t}\n\n\t\t// Perform concrete-hasher logic\n\t\tvar hash = this._doFinalize();\n\n\t\treturn hash;\n\t},\n\n\tblockSize: 512/32,\n\n\t/**\n\t * Creates a shortcut function to a hasher's object interface.\n\t *\n\t * @param {Hasher} hasher The hasher to create a helper for.\n\t *\n\t * @return {Function} The shortcut function.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t */\n\t_createHelper: function (hasher) {\n\t\treturn function (message, cfg) {\n\t\t\treturn new hasher.init(cfg).finalize(message);\n\t\t};\n\t},\n\n\t/**\n\t * Creates a shortcut function to the HMAC's object interface.\n\t *\n\t * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t *\n\t * @return {Function} The shortcut function.\n\t *\n\t * @static\n\t *\n\t * @example\n\t *\n\t *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t */\n\t_createHmacHelper: function (hasher) {\n\t\treturn function (message, key) {\n\t\t\treturn new C_algo.HMAC.init(hasher, key).finalize(message);\n\t\t};\n\t}\n});\n\n/**\n * Algorithm namespace.\n */\nvar C_algo = C.algo = {};\n\nexport default C;\n","import Crypto from \"./core.js\";\n\n// Shortcuts\nvar C = Crypto;\nvar C_lib = C.lib;\nvar Base = C_lib.Base;\nvar C_enc = C.enc;\nvar Utf8 = C_enc.Utf8;\nvar C_algo = C.algo;\n\n/**\n * HMAC algorithm.\n */\nvar HMAC = C_algo.HMAC = Base.extend({\n\t/**\n\t * Initializes a newly created HMAC.\n\t *\n\t * @param {Hasher} hasher The hash algorithm to use.\n\t * @param {WordArray|string} key The secret key.\n\t *\n\t * @example\n\t *\n\t *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t */\n\tinit: function (hasher, key) {\n\t\t// Init hasher\n\t\thasher = this._hasher = new hasher.init();\n\n\t\t// Convert string to WordArray, else assume WordArray already\n\t\tif (typeof key == 'string') {\n\t\t\tkey = Utf8.parse(key);\n\t\t}\n\n\t\t// Shortcuts\n\t\tvar hasherBlockSize = hasher.blockSize;\n\t\tvar hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t\t// Allow arbitrary length keys\n\t\tif (key.sigBytes > hasherBlockSizeBytes) {\n\t\t\tkey = hasher.finalize(key);\n\t\t}\n\n\t\t// Clamp excess bits\n\t\tkey.clamp();\n\n\t\t// Clone key for inner and outer pads\n\t\tvar oKey = this._oKey = key.clone();\n\t\tvar iKey = this._iKey = key.clone();\n\n\t\t// Shortcuts\n\t\tvar oKeyWords = oKey.words;\n\t\tvar iKeyWords = iKey.words;\n\n\t\t// XOR keys with pad constants\n\t\tfor (var i = 0; i < hasherBlockSize; i++) {\n\t\t\toKeyWords[i] ^= 0x5c5c5c5c;\n\t\t\tiKeyWords[i] ^= 0x36363636;\n\t\t}\n\t\toKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t\t// Set initial values\n\t\tthis.reset();\n\t},\n\n\t/**\n\t * Resets this HMAC to its initial state.\n\t *\n\t * @example\n\t *\n\t *     hmacHasher.reset();\n\t */\n\treset: function () {\n\t\t// Shortcut\n\t\tvar hasher = this._hasher;\n\n\t\t// Reset\n\t\thasher.reset();\n\t\thasher.update(this._iKey);\n\t},\n\n\t/**\n\t * Updates this HMAC with a message.\n\t *\n\t * @param {WordArray|string} messageUpdate The message to append.\n\t *\n\t * @return {HMAC} This HMAC instance.\n\t *\n\t * @example\n\t *\n\t *     hmacHasher.update('message');\n\t *     hmacHasher.update(wordArray);\n\t */\n\tupdate: function (messageUpdate) {\n\t\tthis._hasher.update(messageUpdate);\n\n\t\t// Chainable\n\t\treturn this;\n\t},\n\n\t/**\n\t * Finalizes the HMAC computation.\n\t * Note that the finalize operation is effectively a destructive, read-once operation.\n\t *\n\t * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t *\n\t * @return {WordArray} The HMAC.\n\t *\n\t * @example\n\t *\n\t *     var hmac = hmacHasher.finalize();\n\t *     var hmac = hmacHasher.finalize('message');\n\t *     var hmac = hmacHasher.finalize(wordArray);\n\t */\n\tfinalize: function (messageUpdate) {\n\t\t// Shortcut\n\t\tvar hasher = this._hasher;\n\n\t\t// Compute HMAC\n\t\tvar innerHash = hasher.finalize(messageUpdate);\n\t\thasher.reset();\n\t\tvar hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t\treturn hmac;\n\t}\n});\n","import Crypto from \"./core.js\";\nimport \"./hmac.js\";\n\n// Shortcuts\nvar C = Crypto;\nvar C_lib = C.lib;\nvar WordArray = C_lib.WordArray;\nvar Hasher = C_lib.Hasher;\nvar C_algo = C.algo;\n\n// Initialization and round constants tables\nvar H = [];\nvar K = [];\n\n// Compute constants\n(function () {\n\tfunction isPrime(n) {\n\t\tvar sqrtN = Math.sqrt(n);\n\t\tfor (var factor = 2; factor <= sqrtN; factor++) {\n\t\t\tif (!(n % factor)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction getFractionalBits(n) {\n\t\treturn ((n - (n | 0)) * 0x100000000) | 0;\n\t}\n\n\tvar n = 2;\n\tvar nPrime = 0;\n\twhile (nPrime < 64) {\n\t\tif (isPrime(n)) {\n\t\t\tif (nPrime < 8) {\n\t\t\t\tH[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t\t\t}\n\t\t\tK[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t\t\tnPrime++;\n\t\t}\n\n\t\tn++;\n\t}\n}());\n\n// Reusable object\nvar W = [];\n\n/**\n * SHA-256 hash algorithm.\n */\nvar SHA256Hasher = C_algo.SHA256 = Hasher.extend({\n\t_doReset: function () {\n\t\tthis._hash = new WordArray.init(H.slice(0));\n\t},\n\n\t_doProcessBlock: function (M, offset) {\n\t\t// Shortcut\n\t\tvar H = this._hash.words;\n\n\t\t// Working variables\n\t\tvar a = H[0];\n\t\tvar b = H[1];\n\t\tvar c = H[2];\n\t\tvar d = H[3];\n\t\tvar e = H[4];\n\t\tvar f = H[5];\n\t\tvar g = H[6];\n\t\tvar h = H[7];\n\n\t\t// Computation\n\t\tfor (var i = 0; i < 64; i++) {\n\t\t\tif (i < 16) {\n\t\t\t\tW[i] = M[offset + i] | 0;\n\t\t\t} else {\n\t\t\t\tvar gamma0x = W[i - 15];\n\t\t\t\tvar gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t\t\t\t\t\t\t\t((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t\t\t\t\t\t\t\t(gamma0x >>> 3);\n\n\t\t\t\tvar gamma1x = W[i - 2];\n\t\t\t\tvar gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t\t\t\t\t\t\t\t((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t\t\t\t\t\t\t\t(gamma1x >>> 10);\n\n\t\t\t\tW[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t\t\t}\n\n\t\t\tvar ch  = (e & f) ^ (~e & g);\n\t\t\tvar maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t\t\tvar sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t\t\tvar sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t\t\tvar t1 = h + sigma1 + ch + K[i] + W[i];\n\t\t\tvar t2 = sigma0 + maj;\n\n\t\t\th = g;\n\t\t\tg = f;\n\t\t\tf = e;\n\t\t\te = (d + t1) | 0;\n\t\t\td = c;\n\t\t\tc = b;\n\t\t\tb = a;\n\t\t\ta = (t1 + t2) | 0;\n\t\t}\n\n\t\t// Intermediate hash value\n\t\tH[0] = (H[0] + a) | 0;\n\t\tH[1] = (H[1] + b) | 0;\n\t\tH[2] = (H[2] + c) | 0;\n\t\tH[3] = (H[3] + d) | 0;\n\t\tH[4] = (H[4] + e) | 0;\n\t\tH[5] = (H[5] + f) | 0;\n\t\tH[6] = (H[6] + g) | 0;\n\t\tH[7] = (H[7] + h) | 0;\n\t},\n\n\t_doFinalize: function () {\n\t\t// Shortcuts\n\t\tvar data = this._data;\n\t\tvar dataWords = data.words;\n\n\t\tvar nBitsTotal = this._nDataBytes * 8;\n\t\tvar nBitsLeft = data.sigBytes * 8;\n\n\t\t// Add padding\n\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t\tdata.sigBytes = dataWords.length * 4;\n\n\t\t// Hash final blocks\n\t\tthis._process();\n\n\t\t// Return final computed hash\n\t\treturn this._hash;\n\t},\n\n\tclone: function () {\n\t\tvar clone = Hasher.clone.call(this);\n\t\tclone._hash = this._hash.clone();\n\n\t\treturn clone;\n\t}\n});\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA256('message');\n *     var hash = CryptoJS.SHA256(wordArray);\n */\nconst SHA256 = Hasher._createHelper(SHA256Hasher);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA256(message, key);\n */\nconst HmacSHA256 = Hasher._createHmacHelper(SHA256Hasher);\n\nexport { SHA256, HmacSHA256 };\n","/* eslint-disable new-cap */\nimport { SHA256, HmacSHA256 } from \"./crypto-es/sha256.js\";\n\nconst hash = (str) =>\n    SHA256(str).toString();\n\nconst hmac = HmacSHA256;\n    \nexport { hmac, hash };\n","import encode from \"strict-uri-encode\";\n\nconst sort = (a, b) => a.localeCompare(b);\n\n// Sort query parameters by key\n// Then also sort by value because AWS\nexport default ({ url }) => {\n    const source = {};\n    const params = [];\n    \n    url.searchParams.forEach((value, key) => {\n        if(!source[key]) {\n            source[key] = [];\n        }\n\n        source[key].push(value);\n    });\n\n    Object.keys(source)\n        .sort(sort)\n        .forEach((key) => {\n            source[key]\n                .sort(sort)\n                .forEach((value) => {\n                    params.push(`${encode(key)}=${encode(value)}`);\n                });\n        });\n\n    return params.join(\"&\");\n};\n","const trim = (val) => {\n    return val\n        .toString()\n        .trim()\n        .replace(/\\s+/g, \" \");\n};\n\nconst values = (headers) => {\n    if(!headers.length) {\n        return \"\";\n    }\n\n    return headers\n        .map(([ key, vals ]) => {\n            return `${key}:${Array.isArray(vals) ? vals.map(trim).join(\",\") : trim(vals)}`;\n        })\n        .join(\"\\n\");\n};\n\nconst signed = (headers) => {\n    return headers\n        .map(([ key ]) => key)\n        .join(\";\");\n};\n\nconst sorted = ({ headers = {} }) => {\n    const out = Object.keys(headers).map((key) => [ key.toLowerCase(), headers[key] ]);\n\n    return out.sort((a, b) => a[0] > b[0]);\n};\n\nexport { sorted, values, signed };\n","const multipleSlashesRegex = /\\/\\/+/g;\n\nexport default ({ url }) => url.pathname\n        .replace(multipleSlashesRegex, \"/\")\n        .split(\"/\")\n        .reduce((prev, curr) => {\n            if(curr === \"..\") {\n                prev.pop();\n\n                return prev;\n            }\n            \n            if(curr === \".\") {\n                return prev;\n            }\n            \n            prev.push(curr);\n\n            return prev;\n        }, [])\n        .join(\"/\");\n","import { hash } from \"../encode.js\";\n\nimport query from \"./query.js\";\nimport { values, signed } from \"./headers.js\";\nimport path from \"./path.js\";\n\nexport default (req) => {\n    const { method, body, sortedHeaders } = req;\n\n    return [\n        method ? method.toUpperCase() : \"GET\",\n        \n        // Canonical Path\n        path(req),\n        \n        // Canonical Query\n        query(req),\n        \n        // Canonical Headers\n        values(sortedHeaders),\n\n        // Extra linebreak\n        \"\",\n\n        // Signed Headers\n        signed(sortedHeaders),\n\n        // Hashed payload\n        hash(typeof body === \"string\" ? body.trim() : body),\n    ].join(\"\\n\");\n};\n","import { hash } from \"./encode.js\";\n\n// https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html\nexport default ({ algorithm, date, region, service }, canonical) => [\n        // Signing Function\n        algorithm,\n        \n        // Date Time\n        date.long,\n        \n        // Scope\n        `${date.short}/${region}/${service}/aws4_request`,\n        \n        // Signed canonical request\n        hash(canonical),\n    ].join(\"\\n\");\n","import { hmac } from \"./encode.js\";\n\nexport default ({ date, secretAccessKey, region, service }, sts) => {\n    const kDate = hmac(date.short, `AWS4${secretAccessKey}`);\n    const kRegion = hmac(region, kDate);\n    const kService = hmac(service, kRegion);\n    const kSignature = hmac(\"aws4_request\", kService);\n\n    return hmac(sts, kSignature);\n};\n","import request from \"./request/request.js\";\nimport { sorted, signed } from \"./request/headers.js\";\nimport stringToSign from \"./stringtosign.js\";\nimport signature from \"./signature.js\";\n\nconst dateCleanRegex = /[:\\-]|\\.\\d{3}/g;\n\nconst requestRequired = [\n    \"url\",\n];\n\nconst configRequired = [\n    \"accessKeyId\",\n    \"region\",\n    \"secretAccessKey\",\n    \"service\",\n];\n\n// Check for required params\nconst validate = (source, config) => {\n    if(!source) {\n        throw new Error(`Missing request object`);\n    }\n\n    if(!config) {\n        throw new Error(`Missing config object`);\n    }\n\n    let missing = requestRequired.filter((field) => !source[field]);\n\n    if(missing.length) {\n        throw new Error(`Missing required request fields: ${missing.join(\", \")}`);\n    }\n    \n    missing = configRequired.filter((field) => !config[field]);\n\n    if(missing.length) {\n        throw new Error(`Missing required config fields: ${missing.join(\", \")}`);\n    }\n};\n\nconst parseDate = ({ headers }) => {\n    const datetime = \"X-Amz-Date\" in headers ?\n        headers[\"X-Amz-Date\"] :\n        (new Date(headers.Date || Date.now()))\n            .toISOString()\n            .replace(dateCleanRegex, \"\");\n\n    return {\n        short : datetime.split(\"T\")[0],\n        long  : datetime,\n    };\n};\n\nconst authorization = (req, sig) => {\n    const { algorithm, accessKeyId, date, region, service, sortedHeaders } = req;\n\n    return [\n        `${algorithm} Credential=${accessKeyId}/${date.short}/${region}/${service}/aws4_request`,\n        `SignedHeaders=${signed(sortedHeaders)}`,\n        `Signature=${sig}`,\n    ].join(\", \");\n};\n\nexport default (source, config) => {\n    validate(source, config);\n\n    const details = Object.assign(\n        Object.create(null),\n        {\n            method : \"GET\",\n        },\n        source,\n        config,\n        {\n            url           : new URL(source.url),\n            algorithm     : \"AWS4-HMAC-SHA256\",\n            date          : parseDate(source),\n            sortedHeaders : sorted(source),\n        }\n    );\n    \n    const canonical = request(details);\n    const sts = stringToSign(details, canonical);\n    const sig = signature(details, sts);\n    const auth = authorization(details, sig);\n\n    /* START.TESTSONLY */\n    // Add partial output to response for tests\n    source.test = {\n        canonical,\n        sts,\n        auth,\n    };\n    /* END.TESTSONLY */\n\n    if(!source.headers) {\n        source.headers = {};\n    }\n\n    source.headers[\"X-Amz-Date\"] = details.date.long;\n    \n    if(config.sessionToken) {\n        source.headers[\"X-Amz-Security-Token\"] = config.sessionToken;\n    }\n    \n    source.headers.Authorization = auth;\n\n    return source;\n};\n"],"names":["C","Crypto","C_lib","Base","C_enc","Utf8","C_algo","WordArray","Hasher"],"mappings":"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"}